<?php

/**
 * @file
 * Install, update and uninstall functions for the Vactory Decoupled Facets
 *   module.
 */

use Drupal\Core\Language\LanguageInterface;
use Drupal\node\Entity\Node;

function _get_vactory_decoupled_search_facets_default_pages() {
  return [
    'advanced_search' => [
      'path' => '/advanced-search',
      'title' => 'Advanced Search',
    ],
  ];
}

function _vactory_decoupled_search_facets_create_default_node($machine_name, $title, $path) {
  $node = Node::create([
    'type' => 'vactory_page',
    'title' => $title,
    'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
    'uid' => 1,
  ])
    ->set('machine_name', $machine_name)
    ->setPublished();
  $node->save();

  $route = \Drupal::entityTypeManager()->getStorage('vactory_route')->create([
    'id' => $machine_name,
    'label' => $title,
    'path' => "/node/" . $node->id(),
    'alias' => $path,
  ]);
  $route->save();

  return $node;
}

/**
 * Implements hook_install().
 */
function vactory_decoupled_facets_install() {
  foreach (_get_vactory_decoupled_search_facets_default_pages() as $machine_name => $page) {
    $nodes = \Drupal::entityTypeManager()
      ->getStorage('node')
      ->loadByProperties(['machine_name' => $machine_name]);

    if (empty($nodes)) {
      _vactory_decoupled_search_facets_create_default_node($machine_name, $page['title'], $page['path']);
    }
  }

  // Run a complete cache flush.
  drupal_flush_all_caches();
}

/**
 * Implements hook_uninstall().
 */
function vactory_decoupled_facets_uninstall() {
  // Delete routes.
  $routes = \Drupal::entityTypeManager()
    ->getStorage('vactory_route')
    ->loadByProperties([
      'id' => 'advanced_search',
    ]);
  foreach ($routes as $route) {
    $route->delete();
  }

  // Delete nodes.
  foreach (_get_vactory_decoupled_search_facets_default_pages() as $machine_name => $page) {
    $nodes = \Drupal::entityTypeManager()
      ->getStorage('node')
      ->loadByProperties([
        'type' => 'vactory_page',
        'machine_name' => $machine_name,
      ]);

    foreach ($nodes as $node) {
      $node->delete();
    }
  }
}
